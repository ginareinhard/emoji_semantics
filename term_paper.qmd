---
title: "Term paper"
subtitle: ""
author: "Rose H√∂rsting & Gina Reinhard"
date: "2024-09-15"
engine: knitr
bibliography: references.bib
format: 
  html:
    toc: true
    toc-depth: 3
    number-sections: true
    embed-resources: true
link-citations: true
csl: "apa_7th.csl"
---

```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = TRUE)

```

```{r include=FALSE}

library(checkdown)

```

#### **Chapter overview** {.unnumbered}

In this chapter, we...

```{r load-libraries, message=FALSE}

library(here)
library(tidyverse)

```

## Introducing the study

@fricke2024semantic \> Fricke, L., Grosz, P. G., & Scheffler, T. (2024). Semantic differences in visually similar face emojis. Language and Cognition, 1‚Äì15. \<httpsdoi:10.1017/langcog.2024.12\>.

::: {.callout-note title="How did the experiment work?"}
...

They used the face emoji annotation system developed by @fugate2021implications, Facial Action Coding System (FACS) by @ekman1978facial. FACS decomposes facial expressions into minimal Action Units (AUs) which makes the annotation of face emojis possible.

Pictorial approach @maier2023emojis vs. lexicalist approach @grosz2023semantics.

Goal: Test the predictions of the pictorial approach, i.e.: There should be a clear preference for the context-matching emoji for emoji pairs with an \[AU+\] difference. For emojis without an AU difference \[AU-\], context-matching emojis should be chosen less often (p.7)

Question: Do AU differences lead to differences in meaning between the two emojis of a pair? Hypothesis: "Small visual differences that do not correspond to AU differences ((no clear real-life counterparts)) should be semantically less relevant than visual differences that do correspond to AU differences" (4) Method: three \[AU+\] and three \[AU\] emoji pairs, rendered in WhatsApp Android version; each emoji to occur on one pair; no emojis with symbolic components (5) Task: participants must choose between emojis of a pair (Forced chocie task), help "Alex/Anna" help using the emoji that best matches the text (6)
:::

```{r import-data, message=FALSE}

raw_data <- read.csv("/Users/ginareinhard/Documents/GitHub/term_paper/data/raw_data.csv")

```

## Data wrangling

```{r clean-data}

data <- raw_data |> 
  filter(age <= 35)

```

```{r, results=FALSE}

table(raw_data$gender)
table(raw_data$emoji_understanding)
table(raw_data$emoji_use)
table(raw_data$name)

```

```{r gender-count, results=FALSE}

gender_count <- data |> 
  group_by(submission_id) |> 
  count(gender)

table(gender_count$gender)

```

```{r emojiuse-count, results=FALSE}

emoji_use_count <- data |> 
  group_by(submission_id) |> 
  count(emoji_use)

table(emoji_use_count$emoji_use)

```

```{r}

data <- data |> 
  mutate(alex_anna = case_when(
    str_detect(question, "Alex") ~ "Alex",
    str_detect(question, "Anna") ~ "Anna",
    .default = NULL))

```

Create a column with the experimental conditions (AU+, AU-, and filler/control items) using a combination of str_detect, case_when and mutate:

```{r}

data <- data |>
  mutate(AU_difference = case_when(str_detect(name, "AU") ~ "yes",
                                   str_detect(name, "N") ~ "no",
                                   str_detect(name, "filler") ~ "filler",
                                   .default = NULL))

table(data$AU_difference)

test_AU <- data |>
  filter(str_detect(name, "AU")) |> 
  select(name, option1, option2, question, trial_name, QUD)

table(test_AU$name)

```

```{r}

#####emoji pairs with AU difference:

test_AU02 <- data |>
  filter(str_detect(name, "AU-02")) |> 
  select(name, option1, option2, alex_anna, trial_name, QUD)

test_AU07 <- data |>
  filter(str_detect(name, "AU-07")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_AU22 <- data |>
  filter(str_detect(name, "AU-22")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_AU23 <- data |>
  filter(str_detect(name, "AU-23")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_AU40 <- data |>
  filter(str_detect(name, "AU-40")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_AU41 <- data |>
  filter(str_detect(name, "AU-41")) |> 
  select(name, option1, option2, question, trial_name, QUD)

table(test_AU02$option1)
table(test_AU02$option2)
table(test_AU07$option1)
table(test_AU07$option2)
table(test_AU22$option1)
table(test_AU22$option2)
table(test_AU23$option1)
table(test_AU23$option2)
table(test_AU40$option1)
table(test_AU40$option2)
table(test_AU41$option1)
table(test_AU41$option2)

#####emoji pairs without AU difference:

test_N04 <- data |>
  filter(str_detect(name, "N-04")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_N06 <- data |>
  filter(str_detect(name, "N-06")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_N12 <- data |>
  filter(str_detect(name, "N-12")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_N13 <- data |>
  filter(str_detect(name, "N-13")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_N36 <- data |>
  filter(str_detect(name, "N-36")) |> 
  select(name, option1, option2, question, trial_name, QUD)

test_N37 <- data |>
  filter(str_detect(name, "N-37")) |> 
  select(name, option1, option2, question, trial_name, QUD)

table(test_N04$option1)
table(test_N04$option2)
table(test_N06$option1)
table(test_N06$option2)
table(test_N12$option1)
table(test_N12$option2)
table(test_N13$option1)
table(test_N13$option2)
table(test_N36$option1)
table(test_N36$option2)
table(test_N37$option1)
table(test_N37$option2)

```

Context:

```{r}

test_happiness <- data |>
  filter(str_detect(question, "freut sich"))

test_laughter <- data |>
  filter(str_detect(question, "lacht"))
  
table(test_happiness$name)
table(test_laughter$name)

```

## Data analysis/visualisation

### Descriptive statistics

### Walkthrough bar plot

Plot emoji use frequencies as barplot with ggplot:

```{r}

ggplot(emoji_use_count, mapping = aes(x = emoji_use)) + 
  geom_bar()

```

Reorder levels of factor "emoji_use":

```{r plot-emojiuse}

emoji_use_count <- emoji_use_count |> 
  mutate(emoji_use = factor(emoji_use, levels = c("nie", "selten", "gelegentlich", "oft", "in fast jeder Nachricht")))

```

Plot with ordered levels:

```{r}

ggplot(emoji_use_count, mapping = aes(x = emoji_use)) + 
  geom_bar()

```

::: callout-tip
#### Quiz time! {.unnumbered}

1\) Test question?

```{r echo=FALSE, results="asis"}

check_question("D", options = c("A", "B", "C", "D", "E"), type = "radio", 
random_answer_order = TRUE,
button_label = "Check answer", q_id = 4,
right = "Test right!",
wrong = "Test incorrect.")

```
:::

## Inserting emojis in R

üòÅ

## Conclusion

## References
